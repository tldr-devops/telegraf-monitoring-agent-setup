# Configured by Ansible
# For default settings and comments check `telegraf config`
# Or `less telegraf.conf.default`

# Unlike the `global_tags` and `agent` tables,
# any plugin can be defined multiple times
# and each instance will run independently.
# This allows you to have plugins defined
# with differing configurations as needed
# within a single Telegraf process.
# You can add custom conf files into /etc/telegraf/telegraf.d
# https://github.com/influxdata/telegraf/blob/master/docs/CONFIGURATION.md

# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})

[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logtarget = "file"
  logfile = ""
  logfile_rotation_interval = "0d"
  logfile_rotation_max_size = "0MB"
  logfile_rotation_max_archives = 5
  hostname = ""
  omit_hostname = false

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  # mount_points = ["/"]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]
  fielddrop = ["uptime_format"]

[[outputs.prometheus_client]]
  listen = ":9273"
  metric_version = 2
  # basic_username = "Foo"
  # basic_password = "Bar"
  # ip_range = []
  # path = "/metrics"
  # expiration_interval = "60s"
  # collectors_exclude = ["gocollector", "process"]
  # string_as_label = true
  # tls_cert = "/etc/ssl/telegraf.crt"
  # tls_key = "/etc/ssl/telegraf.key"
  # tls_allowed_cacerts = ["/etc/telegraf/clientca.pem"]
  # export_timestamp = false

# BEGIN ANSIBLE MANAGED BLOCK 'DOCKER AUTODETECT'
[[inputs.docker]]
  endpoint = "unix://${HOST_MOUNT_PREFIX}/run/podman/podman.sock"
  source_tag = true
  docker_label_include = ['source', 'container_name', 'container_status', 'host']
  docker_label_exclude = ['*']
# END ANSIBLE MANAGED BLOCK 'DOCKER AUTODETECT'
